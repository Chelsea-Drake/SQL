In this project, I downloaded Spotify data from Kaggle, consisting of multiple attributes such as artist name, track name, popularity, 
danceability, energy, and more. Next I queried the dataset with the following SQL to provide actionable insights to understand trends in 
music popularity, artist performance, and specific song attributes.

# Creating the table:

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)


#1 Which song is the most popular and who was the artist?

SELECT track_name, artist_name
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC
LIMIT 1;


#2 Which song was the least popular and who was the artist?

SELECT track_name, artist_name
FROM BIT_DB.Spotifydata
ORDER BY popularity ASC
LIMIT 1;


#3 Which 15 songs have the best danceability?

SELECT track_name
FROM BIT_DB.Spotifydata
ORDER BY danceability DESC
LIMIT 15;


#4 Which 5 songs have the most lyrics?

SELECT track_name
FROM BIT_DB.Spotifydata
ORDER BY speechiness DESC
LIMIT 5;


#5 How many top 50 hits did Olivia Rodrigo have?

SELECT COUNT(*)
FROM BIT_DB.Spotifydata
WHERE artist_name = 'Olivia Rodrigo';


#6 What is the average popularity of songs with an energy of 0.7 or greater?

SELECT AVG(popularity)
FROM BIT_DB.Spotifydata
WHERE energy >= 0.7;


#7 Who are the top 10 artists based on popularity?

SELECT DISTINCT artist_name
FROM BIT_DB.Spotifydata
ORDER BY popularity
LIMIT 10;
