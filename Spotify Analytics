# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert the Spotify data into.
# Finally, I performed analytics on the data using SQL.

#Creating the table:

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

# I then inserted the Spotify .csv into the table.
# Next, I explored the data using the following SQL:


-- #1 Which song is the most popular and who was the artist?

SELECT track_name, artist_name
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC
LIMIT 1;

SELECT track_name, artist_name, MAX(popularity)
FROM BIT_DB.Spotifydata;

-- #2 Which song was the least popular and who was the artist?

SELECT track_name, artist_name
FROM BIT_DB.Spotifydata
ORDER BY popularity ASC
LIMIT 1;

SELECT track_name, artist_name, MIN(popularity)
FROM BIT_DB.Spotifydata;

-- #3 Which 15 songs have the best danceability?

SELECT track_name
FROM BIT_DB.Spotifydata
ORDER BY danceability DESC
LIMIT 15;

-- #4 Which 5 songs have the most lyrics?

SELECT track_name
FROM BIT_DB.Spotifydata
ORDER BY speechiness DESC
LIMIT 5;

-- #5 Which songs have an instrumental score above 0.0001?

SELECT track_name, instrumentalness
FROM BIT_DB.Spotifydata
WHERE instrumentalness > 0.0001; 

-- #8 How many top 50 hits did Olivia Rodrigo have?

SELECT COUNT(*)
FROM BIT_DB.Spotifydata
WHERE artist_name = 'Olivia Rodrigo';

-- #9 What is the average popularity of songs with an energy of 0.7 or greater?

SELECT AVG(popularity)
FROM BIT_DB.Spotifydata
WHERE energy >= 0.7;
